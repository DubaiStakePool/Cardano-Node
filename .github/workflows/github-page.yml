name: "Haddock documentation"

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        ghc: ["8.10.7"]
        os: [ubuntu-latest]

    env:
      # Modify this value to "invalidate" the cabal cache.
      CABAL_CACHE_VERSION: "2022-12-28"

      # Modify this value to "invalidate" the secp cache.
      SECP_CACHE_VERSION: "2022-12-23"

      # current ref from: 27.02.2022
      SECP256K1_REF: ac83be33d0956faf6b7f61a60ab524ef7d6a473a

      # OpenSSL is installed in a non-standard location in MacOS. See
      # https://github.com/actions/virtual-environments/blob/main/images/macos/macos-11-Readme.md
      PKG_CONFIG_PATH: ${{ (matrix.os == 'macos-latest' && '/usr/lib/pkgconfig:/usr/local/opt/openssl@1.1/lib/pkgconfig') || (matrix.os == 'ubuntu-latest' && '/usr/lib/pkgconfig:/usr/local/lib/pkgconfig') || '' }}

      # we need the LD_LIBRARY_PATH env var here because we ended up installing libsecp256k1 into /usr/local,
      # pkg-config, *does* return the proper location, but the library does not appear to be properly referenced.
      # FIXME: this is arguably a bug, and pkg-config should return the right values!
      LD_LIBRARY_PATH: ${{ (matrix.os != 'windows-latest' && '/usr/local/lib') || '' }}

    steps:
     # this seems to break something. It _must_ come after the pacman setup
     # above. It appears as if PATHEXT is set _after_ ghcup install ghc/cabal, and
     # as such we'd need pacman.exe instead.
    - name: Setup Haskell
      run: |
        # Use GHCUP to manage ghc/cabal
        ghcup install ghc --set ${{ matrix.ghc }}
        ghcup install cabal --set 3.8.1.0

        ghc --version
        cabal --version

    - name: "Setup cabal-store"
      id: cabal-store
      shell: bash
      run: |
        cabal help user-config
        cabal_config_file="$(cabal help user-config | grep -A 1 'You can edit the cabal configuration file to set defaults' | tail -n 1 | xargs)"

        echo "cabal-store=$(dirname "$cabal_config_file")/store" | tee -a "$GITHUB_OUTPUT"

    - uses: actions/checkout@v2

    - name: Add build script path
      run: echo "$(pwd)/.github/bin" >> $GITHUB_PATH

    - name: Install build environment
      run: |
        sudo apt-get update
        sudo apt-get -y install libsodium23 libsodium-dev
        sudo apt-get -y install libsystemd0 libsystemd-dev
        sudo apt-get -y remove --purge software-properties-common
        sudo apt-get -y autoremove

    - uses: actions/cache@v3
      name: "Cache secp256k1"
      with:
        path: secp256k1
        key: cache-secp256k1-${{ runner.os }}-${{ env.SECP_CACHE_VERSION }}
        restore-keys: cache-secp256k1-${{ runner.os }}-${{ env.SECP_CACHE_VERSION }}

    - name: "Install secp256k1"
      shell: bash
      env:
        CI_SECP_FLAGS: "--prefix=/usr/local"
        CI_SECP_INSTALL_CMD: sudo
      run: bash .github/workflows/build-secp256k1.bash

    - name: Cabal update
      run: cabal update

    - name: combine github-pages, and machine local project files.
      run: |
        cat .github/workflows/cabal.project.local.github-pages \
            ".github/workflows/cabal.project.local.ci.$(uname -s)" \
            | tee cabal.project.local

    - name: Dry run
      run: |
        cabal build all --dry-run
        mkdir ./haddocks
        DRY_RUN=1 ./scripts/haddocs.sh ./haddocks true

    - name: Cabal cache over S3
      uses: action-works/cabal-cache-s3@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      with:
        region: us-west-2
        dist-dir: dist-newstyle
        store-path: ${{ steps.cabal-store.outputs.cabal-store }}
        threads: 16
        archive-uri: ${{ secrets.BINARY_CACHE_URI }}/${{ env.CABAL_CACHE_VERSION }}
        skip: "${{ secrets.BINARY_CACHE_URI == '' }}"

    - name: Cabal cache over HTTPS
      uses: action-works/cabal-cache-s3@v1
      with:
        dist-dir: dist-newstyle
        store-path: ${{ steps.cabal-store.outputs.cabal-store }}
        threads: 16
        archive-uri: https://iohk.cache.haskellworks.io/${{ env.CABAL_CACHE_VERSION }}
        skip: "${{ secrets.BINARY_CACHE_URI != '' }}"
        enable-save: false

    - name: Install dependencies
      run: cabal build all

    - name: Build Haddock documentation ðŸ”§
      run: ./scripts/haddocs.sh ./haddocks true

    - name: View HTML files
      run: |
        find "dist-newstyle/build" -name '*.html' | xargs grep html

    - name: Upload documentation
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      continue-on-error: true
      with:
        name: haddocks-${{ matrix.os }}-${{ matrix.ghc }}
        path: ./haddocks

    - name: Deploy documentation to gh-pages ðŸš€
      if: github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN || github.token }}
        publish_dir: haddocks
        force_orphan: true
